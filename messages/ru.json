{
  "theme": "Тема",
  "private": {
    "home": "Главная",
    "logout": "Выйти",
    "profile": "Профиль",
    "quiz": "Викторина"
  },
  "localeswitcher": {
    "de": "Немецкий",
    "en": "Английский",
    "ar": "Арабский",
    "es": "Испанский",
    "fa": "Персидский",
    "fr": "Французский",
    "ja": "Японский",
    "ru": "Русский",
    "label": "Язык"
  },
  "auth": {
    "credentials": "Учетные данные: jane@doe.com / next-intl",
    "description": "Пожалуйста, введите свои данные.",
    "email": "Электронная почта",
    "invalidCredentials": "Проверьте свои учетные данные.",
    "invalidEmail": "Введите действительный адрес электронной почты.",
    "invalidPassword": "Введите пароль.",
    "login": "Войти",
    "register": "Зарегистрироваться",
    "password": "Пароль",
    "title": "С возвращением",
    "quiz": "Викторина"
  },
  "home": {
    "title": "Главная",
    "description": "Добро пожаловать на главную страницу! Здесь вы найдете последние обновления, избранные статьи и полезные ресурсы, чтобы начать работу с нашей платформой. Изучайте наш контент и наслаждайтесь вашим пребыванием!",
    "button": "Викторина"
  },
  "quiz": {
    "title": "Викторина",
    "description": "Вот ваша страница викторины! Выберите одну из категорий ниже, протестируйте свои знания по теме и сравните свой результат с другими!"
  },
  "error": {
    "title": "Что-то пошло не так!",
    "description": "К сожалению, произошла ошибка. Вы можете попробовать перезагрузить страницу, которую вы посещали."
  },
  "notfound": {
    "title": "Страница не найдена",
    "description": "Пожалуйста, проверьте строку адреса браузера или используйте навигацию для перехода на известную страницу."
  },
  "subject": {
    "css": {
      "questions": [
        {
          "question": "Что означает CSS?",
          "options": [
            "Каскадные таблицы стилей",
            "Таблицы стилей для компьютеров",
            "Креативная система стилей",
            "Цветные таблицы стилей"
          ],
          "answer": 0
        },
        {
          "question": "Какое свойство используется для изменения цвета текста в CSS?",
          "options": ["color", "text-color", "font-color", "background-color"],
          "answer": 0
        },
        {
          "question": "Какой синтаксис правильный для применения класса в CSS?",
          "options": [
            ".classname { ... }",
            "#classname { ... }",
            "*classname { ... }",
            "classname { ... }"
          ],
          "answer": 0
        },
        {
          "question": "Какое свойство CSS контролирует размер текста?",
          "options": ["font-size", "text-size", "size", "font-style"],
          "answer": 0
        },
        {
          "question": "Как сделать цвет фона прозрачным в CSS?",
          "options": [
            "background-color: none",
            "background-color: transparent",
            "background: invisible",
            "background-opacity: 0"
          ],
          "answer": 1
        },
        {
          "question": "Какое значение по умолчанию для позиции элемента в CSS?",
          "options": ["static", "relative", "absolute", "fixed"],
          "answer": 0
        },
        {
          "question": "Какое свойство используется для установки расстояния между строками текста?",
          "options": [
            "line-height",
            "letter-spacing",
            "text-spacing",
            "height"
          ],
          "answer": 0
        },
        {
          "question": "Что делает свойство z-index в CSS?",
          "options": [
            "Контролирует размер элемента",
            "Контролирует порядок наложения элементов",
            "Контролирует видимость элемента",
            "Контролирует выравнивание текста"
          ],
          "answer": 1
        },
        {
          "question": "Какая псевдокласс используется для выбора первого дочернего элемента?",
          "options": [":first", ":first-child", ":child(1)", ":first-element"],
          "answer": 1
        },
        {
          "question": "Какова цель правила @media в CSS?",
          "options": [
            "Определять стили для разных размеров экранов или устройств",
            "Импортировать внешние CSS файлы",
            "Устанавливать свойства шрифтов",
            "Добавлять анимации к элементам"
          ],
          "answer": 0
        }
      ]
    },
    "html": {
      "questions": [
        {
          "question": "Что означает HTML?",
          "options": [
            "Язык разметки гипертекста",
            "Язык машины гипертекста",
            "Язык разметки гиперссылок и текста",
            "Язык разметки инструментов для дома"
          ],
          "answer": 0
        },
        {
          "question": "Какая тег используется для создания гиперссылки в HTML?",
          "options": ["<a>", "<link>", "<href>", "<hyperlink>"],
          "answer": 0
        },
        {
          "question": "Какова цель тега <head> в HTML-документе?",
          "options": [
            "Определить контент тела",
            "Содержит метаданные и ссылки на внешние ресурсы",
            "Отображает основной контент",
            "Создает заголовки"
          ],
          "answer": 1
        },
        {
          "question": "Какой элемент HTML используется для вставки изображения?",
          "options": ["<img>", "<image>", "<picture>", "<src>"],
          "answer": 0
        },
        {
          "question": "Какой атрибут используется для предоставления альтернативного текста для изображения?",
          "options": ["title", "alt", "src", "description"],
          "answer": 1
        },
        {
          "question": "Какой тег используется для определения строки таблицы в HTML?",
          "options": ["<tr>", "<td>", "<th>", "<row>"],
          "answer": 0
        },
        {
          "question": "Какой правильный HTML тег для самого большого заголовка?",
          "options": ["<h1>", "<heading>", "<h6>", "<head>"],
          "answer": 0
        },
        {
          "question": "Какой атрибут HTML используется для указания уникального идентификатора для элемента?",
          "options": ["class", "id", "name", "key"],
          "answer": 1
        },
        {
          "question": "Как создать упорядоченный список в HTML?",
          "options": ["<ul>", "<ol>", "<li>", "<list>"],
          "answer": 1
        },
        {
          "question": "Что делает элемент <form> в HTML?",
          "options": [
            "Создает таблицу",
            "Определяет контейнер для мультимедиа",
            "Собирает ввод от пользователя",
            "Отображает текстовый контент"
          ],
          "answer": 2
        }
      ]
    },
    "javascript": {
      "questions": [
        {
          "question": "Какой из следующих типов данных используется в JavaScript?",
          "options": ["Строка", "HTML", "CSS", "JSON"],
          "answer": 0
        },
        {
          "question": "Какое ключевое слово используется для объявления переменной в JavaScript?",
          "options": ["var", "let", "const", "Все вышеперечисленные"],
          "answer": 3
        },
        {
          "question": "Какой метод используется для преобразования строки JSON в объект JavaScript?",
          "options": [
            "JSON.stringify",
            "JSON.parse",
            "parseJSON",
            "String.toJSON"
          ],
          "answer": 1
        },
        {
          "question": "Каков результат `typeof null` в JavaScript?",
          "options": ["null", "object", "undefined", "string"],
          "answer": 1
        },
        {
          "question": "Что проверяет оператор `===` в JavaScript?",
          "options": [
            "Равенство значения и типа",
            "Равенство только значения",
            "Неравенство значения",
            "Ни один из вышеупомянутых"
          ],
          "answer": 0
        },
        {
          "question": "Какая функция используется для планирования выполнения кода через определенный промежуток времени?",
          "options": ["setTimeout", "setInterval", "setTime", "schedule"],
          "answer": 0
        },
        {
          "question": "Какова область видимости переменной `let`, объявленной внутри блока?",
          "options": [
            "Глобальная",
            "Функция",
            "Блок",
            "Ни один из вышеупомянутых"
          ],
          "answer": 2
        },
        {
          "question": "Что делает метод `Array.prototype.map`?",
          "options": [
            "Сортирует массив",
            "Фильтрует массив",
            "Создает новый массив с преобразованными элементами",
            "Удаляет дублирующиеся элементы"
          ],
          "answer": 2
        },
        {
          "question": "Какая из следующих технологий не является фреймворком/библиотекой JavaScript?",
          "options": ["React", "Angular", "Django", "Vue"],
          "answer": 2
        },
        {
          "question": "Какова цель объекта `Promise` в JavaScript?",
          "options": [
            "Обработка синхронных операций",
            "Обработка асинхронных операций",
            "Выполнение арифметических операций",
            "Управление слушателями событий"
          ],
          "answer": 1
        }
      ]
    },
    "nextjs": {
      "questions": [
        {
          "question": "Какая компания создала Next.js?",
          "options": ["Google", "Vercel", "Facebook", "Amazon"],
          "answer": 1
        },
        {
          "question": "Какой метод получает данные при каждом запросе в Next.js?",
          "options": [
            "getStaticProps",
            "getServerSideProps",
            "getInitialProps",
            "useEffect"
          ],
          "answer": 1
        },
        {
          "question": "Какое поведение рендеринга по умолчанию в Next.js?",
          "options": [
            "Рендеринг на стороне клиента",
            "Статическая генерация сайта",
            "Рендеринг на стороне сервера",
            "Динамический рендеринг"
          ],
          "answer": 1
        },
        {
          "question": "Какой компонент оборачивает ваше приложение для глобальных настроек в Next.js App Router?",
          "options": ["_app.js", "layout.js", "_document.js", "page.js"],
          "answer": 1
        },
        {
          "question": "Какой хук является эксклюзивным для маршрутизации в Next.js?",
          "options": ["useNavigate", "useRouter", "useHistory", "useRoutes"],
          "answer": 1
        },
        {
          "question": "Как включить динамические маршруты в Next.js?",
          "options": [
            "Создать файл `routes.js`",
            "Использовать API `DynamicRoutes`",
            "Добавить файлы `[param]` в директорию `pages` или `app`",
            "Добавить маршруты в `next.config.js`"
          ],
          "answer": 2
        },
        {
          "question": "Что означает ISR в Next.js?",
          "options": [
            "Немедленный рендеринг на сервере",
            "Инкрементная статическая регенерация",
            "Маршрутизация внутреннего состояния",
            "Рендеринг на сервере в памяти"
          ],
          "answer": 1
        },
        {
          "question": "Как указать страницу-запаску для динамического маршрута?",
          "options": [
            "Использовать `getStaticProps`",
            "Использовать `fallback: true` в `getStaticPaths`",
            "Использовать `useRouter`",
            "Добавить файл `[fallback].js`"
          ],
          "answer": 1
        },
        {
          "question": "Какая команда запускает сервер разработки Next.js?",
          "options": [
            "npm run dev",
            "npm run start",
            "npx next-dev",
            "npm build"
          ],
          "answer": 0
        },
        {
          "question": "Какая функция предлагается в Next.js для многоязычных сайтов?",
          "options": [
            "SSR",
            "I18n",
            "Динамический импорт",
            "Статические экспорты"
          ],
          "answer": 1
        }
      ]
    },
    "nodejs": {
      "questions": [
        {
          "question": "Что такое Node.js?",
          "options": [
            "Фреймворк для фронтенда",
            "Среда выполнения для JavaScript",
            "Система управления базами данных",
            "Предпроцессор CSS"
          ],
          "answer": 1
        },
        {
          "question": "Какой модуль используется для создания сервера в Node.js?",
          "options": ["http", "fs", "url", "net"],
          "answer": 0
        },
        {
          "question": "Как установить пакет в проекте Node.js?",
          "options": [
            "npm install <package>",
            "node install <package>",
            "install <package>",
            "node get <package>"
          ],
          "answer": 0
        },
        {
          "question": "Какое имя файла по умолчанию для точки входа приложения Node.js?",
          "options": ["app.js", "server.js", "index.js", "main.js"],
          "answer": 2
        },
        {
          "question": "Какая команда инициализирует новый проект Node.js?",
          "options": ["npm init", "node init", "node create", "npm start"],
          "answer": 0
        },
        {
          "question": "Какова цель модуля `fs` в Node.js?",
          "options": [
            "Обработка операций с файловой системой",
            "Управление HTTP-запросами",
            "Создание серверов",
            "Взаимодействие с базами данных"
          ],
          "answer": 0
        },
        {
          "question": "Что делает функция `require()` в Node.js?",
          "options": [
            "Импортирует модуль",
            "Экспортирует функцию",
            "Запускает приложение Node.js",
            "Запускает сервер"
          ],
          "answer": 0
        },
        {
          "question": "Какой метод используется для синхронного чтения файла в Node.js?",
          "options": [
            "fs.readFile()",
            "fs.readSync()",
            "fs.readFileSync()",
            "fs.syncRead()"
          ],
          "answer": 2
        },
        {
          "question": "Какова цель middleware в Node.js?",
          "options": [
            "Подключение к базе данных",
            "Управление HTTP-ответами",
            "Обработка запросов до их попадания в обработчик маршрутов",
            "Обслуживание статических файлов"
          ],
          "answer": 2
        },
        {
          "question": "Какой фреймворк часто используется с Node.js для создания веб-приложений?",
          "options": ["Express", "React", "Vue", "Angular"],
          "answer": 0
        }
      ]
    },
    "sql": {
      "questions": [
        {
          "question": "Что означает SQL?",
          "options": [
            "Структурированный язык запросов",
            "Простой язык запросов",
            "Структурированный быстрый язык запросов",
            "Язык системных запросов"
          ],
          "answer": 0
        },
        {
          "question": "Какая SQL-команда используется для извлечения данных из базы данных?",
          "options": ["SELECT", "GET", "RETRIEVE", "FETCH"],
          "answer": 0
        },
        {
          "question": "Что делает оператор WHERE в SQL?",
          "options": [
            "Группирует строки",
            "Фильтрует строки по условию",
            "Сортирует строки",
            "Удаляет строки"
          ],
          "answer": 1
        },
        {
          "question": "Какая SQL-команда используется для добавления новой записи в таблицу?",
          "options": [
            "INSERT INTO",
            "ADD RECORD",
            "CREATE RECORD",
            "NEW RECORD"
          ],
          "answer": 0
        },
        {
          "question": "Что делает оператор JOIN в SQL?",
          "options": [
            "Объединяет строки из нескольких таблиц",
            "Удаляет записи из нескольких таблиц",
            "Создает новую таблицу",
            "Обновляет несколько таблиц"
          ],
          "answer": 0
        },
        {
          "question": "Какое ключевое слово SQL используется для сортировки результатов запроса?",
          "options": ["SORT BY", "ORDER BY", "GROUP BY", "FILTER BY"],
          "answer": 1
        },
        {
          "question": "Что делает функция COUNT в SQL?",
          "options": [
            "Подсчитывает количество строк в таблице",
            "Подсчитывает количество столбцов в таблице",
            "Подсчитывает количество символов в строке",
            "Подсчитывает количество таблиц в базе данных"
          ],
          "answer": 0
        },
        {
          "question": "Какая SQL-команда используется для удаления таблицы из базы данных?",
          "options": [
            "DROP TABLE",
            "DELETE TABLE",
            "REMOVE TABLE",
            "TRUNCATE TABLE"
          ],
          "answer": 0
        },
        {
          "question": "Что такое первичный ключ в SQL?",
          "options": [
            "Уникальный идентификатор для строки в таблице",
            "Поле для сортировки данных",
            "Резервный ключ для таблицы",
            "Ключ для индексирования столбцов"
          ],
          "answer": 0
        },
        {
          "question": "Какая SQL-команда используется для группировки строк с одинаковыми значениями?",
          "options": ["GROUP BY", "ORDER BY", "WHERE", "HAVING"],
          "answer": 0
        }
      ]
    },
    "tailwindcss": {
      "questions": [
        {
          "question": "Что такое Tailwind CSS?",
          "options": [
            "CSS-фреймворк для предустановленных компонентов",
            "CSS-фреймворк с приоритетом утилит",
            "CSS-in-JS библиотека",
            "Браузерный движок рендеринга"
          ],
          "answer": 1
        },
        {
          "question": "Какой основной файл используется для настройки Tailwind CSS?",
          "options": [
            "tailwind.config.js",
            "styles.css",
            "tailwind.json",
            "config.css"
          ],
          "answer": 0
        },
        {
          "question": "Какая команда инициализирует файл конфигурации Tailwind CSS?",
          "options": [
            "tailwind init",
            "tailwindcss create",
            "npx tailwind init",
            "npx tailwindcss config"
          ],
          "answer": 2
        },
        {
          "question": "Как добавить пользовательские цвета в Tailwind CSS?",
          "options": [
            "Прямо в HTML",
            "В файл tailwind.config.js в свойство `extend`",
            "Используя инлайновые стили CSS",
            "Создавая новый файл CSS"
          ],
          "answer": 1
        },
        {
          "question": "Какой класс утилиты в Tailwind CSS применяет отступы ко всем сторонам?",
          "options": ["p", "px", "py", "pd"],
          "answer": 0
        },
        {
          "question": "Какой класс утилиты в Tailwind CSS выравнивает элемент по горизонтали?",
          "options": ["m-auto", "center", "mx-auto", "align-center"],
          "answer": 2
        },
        {
          "question": "Что делает директива `@apply` в Tailwind CSS?",
          "options": [
            "Импортирует Tailwind CSS в проект",
            "Применяет утилитарные классы Tailwind в кастомном CSS",
            "Генерирует адаптивные точки перелома",
            "Компилирует CSS быстрее"
          ],
          "answer": 1
        },
        {
          "question": "Как включить тёмный режим в Tailwind CSS?",
          "options": [
            "Добавив класс `dark` к элементам",
            "Настроив свойство `darkMode` в tailwind.config.js",
            "Используя инлайновые стили",
            "Загружая плагин"
          ],
          "answer": 1
        },
        {
          "question": "Какой префикс используется для стилей hover в Tailwind CSS?",
          "options": ["hover:", "onhover:", "hovered:", "h:"],
          "answer": 0
        },
        {
          "question": "Какова цель `purge` в настройках Tailwind CSS?",
          "options": [
            "Удалить неиспользуемый CSS",
            "Очистить кэш",
            "Сбросить стили",
            "Удалить пользовательские темы"
          ],
          "answer": 0
        }
      ]
    },
    "typescript": {
      "questions": [
        {
          "question": "Что такое TypeScript?",
          "options": [
            "Инструмент для управления базами данных",
            "Надстройка JavaScript, добавляющая статическую типизацию",
            "CSS-препроцессор",
            "Версия JavaScript для старых браузеров"
          ],
          "answer": 1
        },
        {
          "question": "Какое ключевое слово используется в TypeScript для определения типа?",
          "options": ["type", "interface", "оба type и interface", "typedef"],
          "answer": 2
        },
        {
          "question": "Что делает ключевое слово `as` в TypeScript?",
          "options": [
            "Явно задает тип данных",
            "Создает псевдоним для типа",
            "Обрабатывает исключения",
            "Приводит выражение к определенному типу"
          ],
          "answer": 3
        },
        {
          "question": "Какое расширение файла у файлов TypeScript?",
          "options": [".js", ".ts", ".tsx", ".jsx"],
          "answer": 1
        },
        {
          "question": "Какое основное преимущество TypeScript по сравнению с JavaScript?",
          "options": [
            "Повышенная производительность",
            "Статическая проверка типов",
            "Упрощенный синтаксис",
            "Автоматическая генерация интерфейса"
          ],
          "answer": 1
        },
        {
          "question": "Как определить объединенный тип в TypeScript?",
          "options": [
            "Используя символ `&`",
            "Используя символ `|`",
            "Используя `:` перед типом",
            "Используя `||` между типами"
          ],
          "answer": 1
        },
        {
          "question": "Какова цель типа `never` в TypeScript?",
          "options": [
            "Представляет значения, которые всегда истинны",
            "Представляет недостижимый код или функции, которые никогда не возвращают значения",
            "Представляет необязательные значения",
            "Представляет неинициализированные переменные"
          ],
          "answer": 1
        },
        {
          "question": "Как указать необязательное свойство в интерфейсе TypeScript?",
          "options": [
            "Добавив `?` к имени свойства",
            "Используя ключевое слово `optional`",
            "Добавив `undefined` как тип",
            "Объявив свойство без типа"
          ],
          "answer": 0
        },
        {
          "question": "Какая команда компилирует файлы TypeScript в JavaScript?",
          "options": ["tsc", "compile-ts", "ts-build", "typescript-compile"],
          "answer": 0
        },
        {
          "question": "Какая функция TypeScript позволяет повторно использовать типы в коде?",
          "options": ["Generics", "Enums", "Modules", "Decorators"],
          "answer": 0
        }
      ]
    },
    "vercel": {
      "questions": [
        {
          "question": "Для чего в первую очередь используется Vercel?",
          "options": [
            "Разработка игр",
            "Статическое и динамическое веб-хостинг",
            "Хостинг мобильных приложений",
            "Облачное хранилище"
          ],
          "answer": 1
        },
        {
          "question": "Какой фреймворк был создан компанией Vercel?",
          "options": ["React", "Next.js", "Vue.js", "Svelte"],
          "answer": 1
        },
        {
          "question": "Какая команда деплоит проект на Vercel?",
          "options": [
            "vercel deploy",
            "vc deploy",
            "vercel push",
            "deploy-now"
          ],
          "answer": 0
        },
        {
          "question": "Какие функции предоставляет Vercel для серверной логики?",
          "options": [
            "Безсерверные функции",
            "Выделенные серверы",
            "Контейнеры",
            "Состоящие функции"
          ],
          "answer": 0
        },
        {
          "question": "Что оптимизирует сетевая инфраструктура Vercel?",
          "options": [
            "Производительность игр",
            "Генерация статичных сайтов",
            "Глобальная доставка и кэширование",
            "Запросы к базе данных"
          ],
          "answer": 2
        },
        {
          "question": "Как называется система предварительных деплойментов Vercel?",
          "options": [
            "Режим предварительного просмотра",
            "Деплойменты по веткам",
            "Тестовые сборки",
            "Предварительные деплойменты"
          ],
          "answer": 3
        },
        {
          "question": "Какая ветка по умолчанию используется для продакшн деплойментов на Vercel?",
          "options": ["main", "master", "production", "deploy"],
          "answer": 0
        },
        {
          "question": "Какая функция Vercel позволяет работать над деплойментами совместно?",
          "options": [
            "Токены доступа",
            "Команды",
            "Webhooks деплоймента",
            "Общие URL-адреса"
          ],
          "answer": 1
        },
        {
          "question": "Можно ли деплоить проекты, не являющиеся Next.js, на Vercel?",
          "options": [
            "Да",
            "Нет",
            "Только если это проект на React",
            "Только если это проект на Node.js"
          ],
          "answer": 0
        },
        {
          "question": "Что Vercel автоматически настраивает для каждого деплоймента?",
          "options": [
            "Непрерывная интеграция",
            "Подключения к базам данных",
            "HTTPS и домены",
            "API-маршруты"
          ],
          "answer": 2
        }
      ]
    }
  }
}
